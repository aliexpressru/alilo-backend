syntax = "proto3";
package qa.loadtesting.alilo.backend.v1;

option go_package = "github.com/aliexpressru/alilo-backend/pkg/pb/qa/loadtesting/alilo/backend/v1";


import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

import "qa/loadtesting/alilo/backend/v1/models.proto";
import "qa/loadtesting/alilo/backend/v1/upload_messages.proto";


// hint: checkout protobuf style guide https://developers.google.com/protocol-buffers/docs/style
service UploadService {

  // AmmoUpload - Upload ammo file
  rpc AmmoUpload(.qa.loadtesting.alilo.backend.v1.AmmoUploadRequest) returns (.qa.loadtesting.alilo.backend.v1.AmmoUploadResponse) {
    option (google.api.http) = {
      post: "/v1/file/upload"
      body: "*"
    };
  }

  // GetDataAmmo - Get data of uploaded ammo by ID
  rpc GetDataAmmo(.qa.loadtesting.alilo.backend.v1.GetDataAmmoRequest) returns (.qa.loadtesting.alilo.backend.v1.GetDataAmmoResponse) {
    option (google.api.http) = {
      post: "/v1/file/data"
      body: "*"
    };
  }

  // GetAllAmmo - Get all uploaded ammo
  rpc GetAllAmmo(.qa.loadtesting.alilo.backend.v1.GetAllAmmoRequest) returns (.qa.loadtesting.alilo.backend.v1.GetAllAmmoResponse) {
    option (google.api.http) = {
      post: "/v1/files"
      body: "*"
    };
  }
}

